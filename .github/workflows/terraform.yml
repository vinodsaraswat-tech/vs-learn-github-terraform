# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: 'Terraform'
    environment: development
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "^1.3.7"
          terraform_wrapper: false
      - name: Terraform Workspace Show
        run: terraform workspace show
      # Runs a single command using the runners shell
      - name: Terraform Init 
        run: terraform init
        working-directory: ./rg
      - name: Terraform fmt
        run: terraform fmt
        working-directory: ./rg
      - name: Terraform Validate
        run: terraform validate
        working-directory: ./rg
      - name: Terraform Plan
        run: terraform plan
        working-directory: ./rg
      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./rg